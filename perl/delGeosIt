#!/usr/bin/perl -w

#------------------------------------------------------------------------------
#          Harvard University Atmospheric Chemistry Modeling Group            !
#------------------------------------------------------------------------------
#BOP
#
# !MODULE: delGeos5
#
# !DESCRIPTION: Perl script delGeos5 deletes GEOS-5 "raw" met data files
#  from the "Raw Met Data Directory".
#\\
#\\
# !USES:
#
  require 5.003;     # Need this version of Perl or newer
  use strict;        # Force explicit variable declarations 
#
# !PUBLIC MEMBER FUNCTIONS:
#  &getDefaults($)
#  &delFiles($)
#  &main
#
# !CALLING SEQUENCE:
#  delGeos5 [ YYYYMMDD | YYYYMM | YYYY ]
#
# !REVISION HISTORY: 
#  24 Oct 2011 - R. Yantosca - Initial version, based on GEOS_5/perl/delGeos5
#EOP
#------------------------------------------------------------------------------
#          Harvard University Atmospheric Chemistry Modeling Group            !
#------------------------------------------------------------------------------
#BOP
#
# !IROUTINE: getDefaults
#
# !DESCRIPTION:  Routine getDefaults reads an input file and returns the
#  name of the directory where the GEOS-5 "raw" met data files are found.
#\\
#\\
# !INTERFACE:
#
sub getDefaults($) {
#
# !INPUT PARAMETERS:
#
  my ( $fileName ) = @_;   # File containing default settings
#
# !RETURN VALUE:
#
  my $metDir  = "";        # Directory where met data is located 
#
# !CALLING SEQUENCE:
#  $metDir = &getDefaults( $fileName );
#
# !REVISION HISTORY:
#  24 Oct 2011 - R. Yantosca - Initial version, based on GEOS_5/perl/delGeos5
#EOP
#------------------------------------------------------------------------------
#BOC
#
# !LOCAL VARIABLES:
#
  my @file = "";
 
  #--------------------------------------
  # Read variable settings from the file
  #--------------------------------------

  # Read defaults file into an array (remove newlines)
  open( I, "<$fileName" ) or die "Cannot open $fileName!\n";
  chomp( @file = <I> );
  close( I );

  # Get login string from the file
  for ( my $i = 0; $i < scalar( @file ); $i++ ) {
    if ( $file[$i] =~ "==> Raw Met Data Directory" ) { $metDir = $file[++$i]; }
  }

  # Return to Main 
  return( $metDir );
}
#EOC
#------------------------------------------------------------------------------
#          Harvard University Atmospheric Chemistry Modeling Group            !
#------------------------------------------------------------------------------
#BOP
#
# !IROUTINE: delFiles
#
# !DESCRIPTION: Suboutine delFiles deletes the GEOS-5 raw met data from 
#  "Raw Met Data Directory".
#\\
#\\
# !INTERFACE:
#
sub delFiles($) {
#
# !INPUT PARAMETERS:
#
  my ( $date ) = @_;   # Date(s) of data to delete: YYYY, YYYYMM, YYYYMMDD
#
# !CALLING SEQUENCE:
#  &delGeos5( $date );
#
# !REVISION HISTORY: 
#  24 Oct 2011 - R. Yantosca - Initial version, based on GEOS_5/perl/delGeos5
#EOP
#------------------------------------------------------------------------------
#
# !LOCAL VARIABLES:

  my $file   = "";
  my @files  = (); 
  my $year   = substr( $date, 0, 4 );
  my $month  = substr( $date, 4, 2 );
  my $metDir = &getDefaults( "doGeos57.input" );
  my $cmd    = "";
  my $input  = "";

  # Print warning for user
  print "*******************************************************************\n";
  print "* Are you really sure you want to delete GEOS-5.7.x raw data files *\n";
  print "* for $year/$month\?  The file deletion is irrevocable!              *\n"; 
  print "*******************************************************************\n";
  print '==> ';

  # Read a single character from the buffer (convert to lowercase)
  $input = getc();
  $input =~ tr/A-Z/a-z/;

  # Get listing of all files in the directory
  opendir( D, $metDir ) or die "$metDir is an invalid directory!\n";
  chomp( @files = readdir( D ) );
  close( D );

  # Test for "y" or "n"
  if ( $input =~ m/y/ ) { 
    
    # If "y": Delete *.hdf and *.hdf.xml files for the proper date(s)
    foreach $file ( @files ) {
      if ( ( $file =~ m/.hdf/ ) && ( $file =~ m/$date/ ) ) { 
	$cmd = "rm -f $metDir/$file";
	print "$cmd\n";
	qx( $cmd );
      }
      else { ; }
    }

  } else { 

    # If "n": Exit w/o deleting anything
    print "Exiting without deleting any files ...\n"; 

  }

  # Exit normally
  return(0);
}
#EOC
#------------------------------------------------------------------------------
#          Harvard University Atmospheric Chemistry Modeling Group            !
#------------------------------------------------------------------------------
#BOP
#
# !IROUTINE: main
#
# !DESCRIPTION: Main is the driver program for the delGeos5 script.
#\\
#\\
# !INTERFACE:
#
sub main() {
#
# !CALLING SEQUENCE:
#  &main();
#
# !REVISION HISTORY:
#  24 Oct 2011 - R. Yantosca - Initial version, based on GEOS_5/perl/delGeos5
#EOP
#------------------------------------------------------------------------------
#BOC

  # Error check # of arguments
  if ( scalar( @ARGV ) != 1 ) {
    print "Usage: delGeos5 [ YYYYMMDD | YYYYMM | YYYY ]\n!";
    exit(1);
  }

  # Delete GEOS-5 data files
  &delFiles( @ARGV );

  # Return error code
  return( $? );
}
#EOC

#------------------------------------------------------------------------------

# Call main program
main();

# Return error code to Unix shell
exit( $? );


